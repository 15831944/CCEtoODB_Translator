// $Header: /CAMCAD/4.5/read_wrt/SpectrumNailreqIn.h 2     9/29/06 4:18p Rick Faltersack $

/*****************************************************************************/
/*
   Project CAMCAD
   Router Solutions Inc.
   Copyright © 1994-2006. All Rights Reserved.
*/

#if !defined(__Spectrum_Nailreq_In_h__)
#define __Spectrum_Nailreq_In_h__

#pragma once

class CNailreqRecord
{
private:
   CString m_netname;    //       Field 1    Net Name        string
   CString m_channelreq; //       Field 2    Channel Req     integer
   CString m_nailsreq;   //       Field 3    Nails Req       integer
   CString m_dscanwire;  //       Field 4    DScan Wire      1 or 0
   CString m_sensewire;  //       Field 5    Sense Wire      -1, 0, or 1
   CString m_drivelevel; //       Field 6    Drive Level     string
   CString m_channumber; //       Field 7    Chan Number     string
   CString m_conditions; //       Field 8    Conditions      string
   CString m_relatedps;  //       Field 9    Related PS      string

public:
   CString getNetName()    { return m_netname; }
   CString getChannelReq() { return m_channelreq; }
   CString getNailsReq()   { return m_nailsreq; }
   CString getDScanWire()  { return m_dscanwire; }
   CString getSenseWire()  { return m_sensewire; }
   CString getDriveLevel() { return m_drivelevel; }
   CString getChanNumber() { return m_channumber; }
   CString getConditions() { return m_conditions; }
   CString getRelatedPS()  { return m_relatedps; }

   void reset(); // clear all values
   void set(CString recordStr); // set fields from file record string
};

class CSpectrumNailreqReader
{
private:
   CCEtoODBDoc *m_doc;
   FileStruct *m_pcbfile;
   CString m_inputFilename;
   CFormatStdioFile m_infile;
   bool m_infileIsOpen;
   WORD m_preassigned_chan_kw;
   CStdioFileWriteFormat m_logfile;
   bool m_logIsOpen;

public:
   CSpectrumNailreqReader(CString infilename, CString logfilename, CCEtoODBDoc *doc, FileStruct *pcbfile);
   ~CSpectrumNailreqReader();

   bool Process();

   bool GetNextRecord(CString &recordRetval);
   bool GetNextRecord(CNailreqRecord &recordRetval);

};

///
/// EXAMPLE FILE
///
/*
//file: C:\tpd\GRDEMO_Class3\D2B\GRDEMO_Class3.NAILREQ.TXT 
//Generated by Spectrum's APG 5.0
// at 03:24:50 PM Aug/23/2006
//
//
// Records are separated by semi-colons(;).
// Fields are separated by commas(,).
// Line continuation for long lines(\).
//
//                    Name         Data type
//       Field 1    Net Name        string
//       Field 2    Channel Req     integer
//       Field 3    Nails Req       integer
//       Field 4    DScan Wire      1 or 0
//       Field 5    Sense Wire      -1, 0, or 1
//       Field 6    Drive Level     string
//       Field 7    Chan Number     string
//       Field 8    Conditions      string
//       Field 9    Related PS      string
//
//
"UN129F01099PVPP",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA9",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA8",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA14",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA1",  1,  1, 0,-1,  TTLDrive,,,;
"UN129F01099PA2",  1,  1, 0,-1,  TTLDrive,,,;
"UN3CONN3135PP",  1,  1, 0,-1,  TTLDrive,,,;
      "R4P2",  1,  1, 0,-1,  TTLDrive,,,;
"UN3CONN364PP",  1,  1, 0,-1,  TTLDrive,,(MOD16: "UN3CONN3216PP" \
"UN3CONN3299PP"),;
"UN3CONN3216PP",  1,  1, 0,-1,  TTLDrive,,(MOD16: "UN3CONN364PP")(MOD32: \
"UN3CONN3299PP"),;
"UN3CONN3299PP",  1,  1, 0,-1,  TTLDrive,,(MOD16: "UN3CONN364PP")(MOD32: \
"UN3CONN3216PP"),;
"UN3CONN349PP",  1,  1, 0,-1,  TTLDrive,,,;
"UN3CONN3221PP",  1,  1, 0,-1,  TTLDrive,,,;

*/

#endif

