/* -2 -3 */
/********************************** C2QB.C *********************************/
/*************** Routines for processing polycurve geometry ****************/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
#include <aladefs.h>
#include <c2qdefs.h>
#include <c2rdefs.h>
#include <c2adefs.h>
#include <dmldefs.h>
#include <c2qmcrs.h>
STATIC void c2q_box0 __(( C2_PC_BUFFER, REAL, REAL, C2_BOX )) ;

/*-------------------------------------------------------------------------*/
BBS_PRIVATE C2_PC_BUFFER c2q_create_copy ( buffer0 ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer0 ;
{
    C2_PC_BUFFER buffer = c2q_create ( NULL, C2_PC_BUFFER_SIZE(buffer0) ) ;
    if ( buffer != NULL ) 
        c2q_copy ( buffer0, buffer ) ;
    RETURN ( buffer ) ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_copy ( buffer0, buffer1 ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer0, buffer1 ;
{
    C2_PC_BUFFER_N(buffer1) = C2_PC_BUFFER_N(buffer0) ;
    ala_copy ( C2_PC_BUFFER_A(buffer0), 3*C2_PC_BUFFER_N(buffer0)-1, 
        C2_PC_BUFFER_A(buffer1) ) ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE C2_PC_BUFFER c2q_create ( buffer, s ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!  (C) Copyright 1989 - 1995 Building Block Software  !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
INT s ;
{
    if ( buffer == NULL ) 
        buffer = MALLOC ( 1, C2_PC_BUFFER_S ) ;
    if ( buffer == NULL ) 
        RETURN ( NULL ) ;
    c2q_initialize ( buffer, s, 0 ) ;
    RETURN ( buffer ) ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_initialize ( buffer, s, n ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!  (C) Copyright 1989 - 1995 Building Block Software  !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
INT s, n ;
{
    C2_PC_BUFFER_SIZE(buffer) = s ;
    C2_PC_BUFFER_N(buffer) = n ;
    C2_PC_BUFFER_A(buffer) = ( s > 0 ) ? MALLOC ( 3*s-1, REAL ) : NULL ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_set_size ( buffer, size ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!  (C) Copyright 1989 - 1995 Building Block Software  !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
INT size ;
{
    C2_PC_BUFFER_SIZE(buffer) = size ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_set_n ( buffer, n ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!  (C) Copyright 1989 - 1995 Building Block Software  !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
INT n ;
{
    C2_PC_BUFFER_N(buffer) = n ;
}


/*-------------------------------------------------------------------------*/ 
BBS_PRIVATE BOOLEAN c2q_box ( buffer, t0, t1, j, box ) 
/*-------------------------------------------------------------------------*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
/*!!!!!!!!                                                          !!!!!!!*/ 
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
C2_PC_BUFFER buffer ;
REAL t0, t1 ;
INT j ;
C2_BOX box ;
{
    INT i0, i1 ;

    if ( C2_PC_BUFFER_N(buffer) <= 0 ) 
        RETURN ( FALSE ) ;

    t0 -= (REAL)j ;
    t1 -= (REAL)j ;
    i0 = (INT)t0 ;
    i1 = (INT)t1 ;

    if ( i0 == i1 ) 
        c2r_box ( C2_PC_BUFFER_ARC(buffer,i0), 
            t0-(REAL)i0, t1-(REAL)i0, box ) ;
    else {
        c2r_box ( C2_PC_BUFFER_ARC(buffer,i0), t0-(REAL)i0, 1.0, box ) ;
        c2q_box0 ( buffer, t0, t1, box ) ;
    }
    RETURN ( TRUE ) ;
}


/*-------------------------------------------------------------------------*/ 
BBS_PRIVATE BOOLEAN c2q_box_append ( buffer, t0, t1, j, box ) 
/*-------------------------------------------------------------------------*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
/*!!!!!!!!                                                          !!!!!!!*/ 
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
C2_PC_BUFFER buffer ;
REAL t0, t1 ;
INT j ;
C2_BOX box ;
{
    INT i0, i1 ;

    if ( C2_PC_BUFFER_N(buffer) <= 0 ) 
        RETURN ( FALSE ) ;
    t0 -= (REAL)j ;
    t1 -= (REAL)j ;
    i0 = (INT)t0 ;
    i1 = (INT)t1 ;

    if ( i0 == i1 ) 
        c2r_box_append ( C2_PC_BUFFER_ARC(buffer,i0), 
            t0-(REAL)i0, t1-(REAL)i0, box ) ;
    else {
        c2r_box_append ( C2_PC_BUFFER_ARC(buffer,i0), t0-(REAL)i0, 1.0, box ) ;
        c2q_box0 ( buffer, t0, t1, box ) ;
    }
    RETURN ( TRUE ) ;
}


/*-------------------------------------------------------------------------*/ 
STATIC void c2q_box0 ( buffer, t0, t1, box ) 
/*-------------------------------------------------------------------------*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
/*!!!!!!!!                                                          !!!!!!!*/ 
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/ 
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/ 
C2_PC_BUFFER buffer ;
REAL t0, t1 ;
C2_BOX box ;
{
    INT i ;
    REAL u0, u1 ;

    for ( i=1 ; i<C2_PC_BUFFER_N(buffer)-1 ; i++ ) {
        u0 = t0 - (REAL)i ;
        u1 = t1 - (REAL)i ;

        if ( ( u0 <= 1.0 ) && ( u1 >= 0.0 ) ) {
            if ( u0 < 0.0 ) 
                u0 = 0.0 ;
            if ( u1 >= 1.0 ) 
                u1 = 1.0 ;
            c2r_box_append ( C2_PC_BUFFER_ARC(buffer,i), u0, u1, box ) ; 
        }
    }
} 


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_free ( buffer ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
{
    c2q_clear ( buffer ) ;
    FREE ( buffer ) ;
}


/*-------------------------------------------------------------------------*/
BBS_PRIVATE void c2q_clear ( buffer ) 
/*-------------------------------------------------------------------------*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
/*!!!!!!!!                                                          !!!!!!!*/
/*!!!!!!!!      (C) Copyright 1989 - 1995 Building Block Software   !!!!!!!*/
/*!!!!!!!!                    All rights reserved                   !!!!!!!*/
/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/
C2_PC_BUFFER buffer ;
{
    if ( buffer == NULL ) 
        RETURN ;
    FREE ( C2_PC_BUFFER_A(buffer) ) ;
}

